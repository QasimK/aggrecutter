---
- name: sudo user play
  hosts: all
  become: true
  tasks:
#  - name: add pipenv (Python) apt repo
#    # TODO: BUG: https://github.com/pypa/pipenv/issues/2059
#    # Use 17.10 artful repo as a word around :(
#    apt_repository: repo='ppa:pypa/ppa' codename=artful

  - name: update the server
    apt:
      update_cache: yes
      cache_valid_time: 3600
      autoremove: yes
      upgrade: dist
    # Apt is usually locked when Vagrant starts up
    register: apt_status|success
    retries: 10
    delay: 6
    ignore_errors: yes

  - name: install necessary packages
    apt: name={{ item }} state=latest
    with_items:
      - python3-pip
      # TODO: see Pypa bug
#      - pipenv
      - docker.io
      # watchman:
      # Note 18.04 install https://github.com/facebook/watchman/issues/606
      - libssl-dev
      - autoconf
      - automake
      - libtool
      - pkg-config
      - python-dev
      - python3-dev

  # TODO: See pypa bug
  - name: install Pipenv for system via Pip
    pip: executable=pip3 name=pipenv state=latest

  - name: start docker
    systemd: name=docker state=started enabled=yes

  - name: give vagrant user access to use docker
    user: name=vagrant groups=docker append=yes


# watchman is used to detect file changes and re-build
- name: vagrant user install watchman
  hosts: all
  vars:
    watchman_version_wanted: 4.9.0  # The latest stable release as-of-writing
  tasks:
    - name: get installed watchman version
      command: watchman --version
      register: watchman_installed_version

    - name: install watchman
      shell: |
        cd /tmp/
        git clone https://github.com/facebook/watchman.git
        cd watchman
        git checkout v{{ watchman_version_wanted }}
        ./autogen.sh
        ./configure
        make
        sudo make install
        cd /tmp/
        sudo rm -rf watchman
      when: watchman_installed_version.stdout != watchman_version_wanted


- name: vagrant user play
  hosts: all
  tasks:
    - name: create or update virtualenv
      command: pipenv install --dev
      args:
        chdir: /vagrant

    - name: set up or update pre-commit
      command: pipenv run pre-commit install
      args:
        chdir: /vagrant

    - name: cd to vagrant folder whenever you vagrant ssh
      lineinfile:
        line: cd /vagrant
        path: ~/.bashrc
